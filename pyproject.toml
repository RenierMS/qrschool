[tool.poetry]
authors = ["Sebastian Lopez <selobu@gmail.com>"]
description = "Read qr codes"
name = "qrschool"
version = "1.0.0"

[tool.poetry.dependencies]
python = ">=3.8.0, <4.0.0"

aniso8601=="9.0.1"
annotated-types=="0.5.0"
attrs=="23.1.0"
blinker=="1.6.2"
cffi=="1.15.1"
cfgv=="3.4.0"
click=="8.1.6"
cryptography=="41.0.3"
distlib=="0.3.7"
exceptiongroup=="1.1.2"
filelock=="3.12.2"
Flask=="2.3.2"
Flask-Cors=="4.0.0"
Flask-JWT-Extended=="4.5.2"
flask-restx=="1.1.0"
Flask-SQLAlchemy=="3.0.5"
greenlet=="2.0.2"
identify=="2.5.26"
iniconfig=="2.0.0"
itsdangerous=="2.1.2"
Jinja2=="3.1.2"
jsonschema=="4.19.0"
jsonschema-specifications=="2023.7.1"
MarkupSafe=="2.1.3"
mypy-extensions=="1.0.0"
nodeenv=="1.8.0"
packaging=="23.1"
pathspec=="0.11.2"
platformdirs=="3.10.0"
pluggy=="1.2.0"
pre-commit=="3.3.3"
pycparser=="2.21"
pydantic=="2.1.1"
pydantic_core=="2.4.0"
PyJWT=="2.8.0"
PyMySQL=="1.1.0"
pytest=="7.4.0"
pytz=="2023.3"
PyYAML=="6.0.1"
referencing=="0.30.2"
rpds-py=="0.9.2"
SQLAlchemy=="2.0.17"
tomli=="2.0.1"
typing_extensions=="4.7.1"
virtualenv=="20.24.3"
Werkzeug=="2.3.6"


[tool.poetry.group.dev.dependencies]
black = {version = "^23.7.0", python = "^3.9.0"}
coverage = [
  {extras = [
    "toml",
  ], version = "^6.0", python = ">=3.6,<3.7"},
  {extras = [
    "toml",
  ], version = ">=6.5", python = ">=3.7"},
]
flake8 = "^5.0.4"
mypy = "^0.971"
pre-commit = {version = "^2.15.0", python = "^3.6.1"}
pytest = "^6.2"
pytest-cov = "^4.0.0"
types-PyYAML = "^6.0.1"

[tool.poetry.scripts]
swp = "sync_with_poetry.swp:main"

[tool.pytest.ini_options]
addopts = "-svv"
testpaths = ["tests"]

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.github
  | \.hg
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | docs
  | tests/.*/setup.py
)/
'''
include = '\.pyi?$'
line-length = 88

[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_defs = true
explicit_package_bases = true
files = ["**/*.py"]
namespace_packages = true
show_error_codes = true

[tool.isort]
profile = "black"
src_paths = ["sync_with_poetry", "tests"]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]